// Since: cosmos-sdk 0.47
syntax = "proto3";
package cosmos.crosschain.v1;

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/crosschain/v1/crosschain.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/crosschain/types";

// Msg defines the crosschain Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the x/crosschain module parameters.
  // The authority is defined in the keeper.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // UpdateChannelPermissions defines a governance operation for updating the channel permissions.
  // The authority is defined in the keeper.
  rpc UpdateChannelPermissions(MsgUpdateChannelPermissions) returns (MsgUpdateChannelPermissionsResponse);

  // MintModuleTokens defines a governance operation for minting tokens for the crosschain module.
  // The authority is defined in the keeper.
  rpc MintModuleTokens(MsgMintModuleTokens) returns (MsgMintModuleTokensResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/crosschain parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgUpdateChannelPermissions is the Msg/MsgUpdateChannelPermissions request type.
message MsgUpdateChannelPermissions {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // channel_permissions defines the channel permissions to update
  repeated ChannelPermission channel_permissions = 2;
}

// MsgUpdateChannelPermissionsResponse defines the response structure for executing a
// MsgUpdateChannelPermissions message.
message MsgUpdateChannelPermissionsResponse {}

// MsgMintModuleTokens is the Msg/MintModuleTokens request type.
// The Msg is used to mint tokens for the crosschain module.
// This Only permitted to be called by the authority(gov).
message MsgMintModuleTokens {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // initial balance to mint for crosschain module when the chain starts
  string amount = 2 [
    (cosmos_proto.scalar)  = "math.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false
  ];
}

// MsgMintModuleTokensResponse defines the response structure for executing a
// MsgMintModuleTokens message.
message MsgMintModuleTokensResponse {}