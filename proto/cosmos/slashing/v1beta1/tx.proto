syntax = "proto3";
package cosmos.slashing.v1beta1;

option go_package            = "github.com/cosmos/cosmos-sdk/x/slashing/types";
option (gogoproto.equal_all) = true;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the slashing Msg service.
service Msg {
  // Unjail defines a method for unjailing a jailed validator, thus returning
  // them into the bonded validator set, so they can begin receiving provisions
  // and rewards again.
  rpc Unjail(MsgUnjail) returns (MsgUnjailResponse);

  // KickOut defines a method for removing an existing validator after gov proposal passes.
  rpc KickOut(MsgKickOut) returns (MsgKickOutResponse);
}

// MsgUnjail defines the Msg/Unjail request type
message MsgUnjail {
  option (cosmos.msg.v1.signer) = "validator_addr";

  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string validator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.jsontag) = "address"];
}

// MsgUnjailResponse defines the Msg/Unjail response type
message MsgUnjailResponse {}

// MsgKickOut defines the Msg/Kickout request type
message MsgKickOut {
  // NOTE: The validator should be removed by the gov module account after the proposal passes.
  option (cosmos.msg.v1.signer) = "from";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string      from              = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string      validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgKickOutResponse defines the Msg/KickOut response type.
message MsgKickOutResponse {}