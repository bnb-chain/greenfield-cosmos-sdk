syntax = "proto3";
package cosmos.gashub.v1alpha1;

import "gogoproto/gogo.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/gashub/types";

// Params defines the parameters for the gashub module.
message Params {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  uint64 max_tx_size      = 1 [(gogoproto.customname) = "MaxTxSize"];
  uint64 min_gas_per_byte = 2 [(gogoproto.customname) = "MinGasPerByte"];

  repeated MsgGasParams msg_gas_params_set = 3 [(gogoproto.customname) = "MsgGasParamsSet"];
}

// MsgGasParams defines gas for a msg type
message MsgGasParams {
  option (gogoproto.equal) = true;

  string msg_type_url = 1 [(gogoproto.customname) = "MsgTypeUrl"];
  // gas_params is the oneof that represents either fixed_gas_params or dynamic_gas_params
  oneof gas_params {
    // fixed_type specifies fixed type gas params.
    FixedGasParams fixed_type = 2;
    // grant_type specifies dynamic type gas params for msg/grant.
    DynamicGasParams grant_type = 3;
    // grant_type specifies dynamic type gas params for msg/multiSend.
    DynamicGasParams multi_send_type = 4;
    // grant_type specifies dynamic type gas params for msg/grantAllowance.
    DynamicGasParams grant_allowance_type = 5;
  }
  // FixedGasParams defines the parameters for fixed gas type.
  message FixedGasParams {
    option (gogoproto.equal) = true;

    uint64 fixed_gas = 1 [(gogoproto.customname) = "FixedGas"];
  }

  // DynamicGasParams defines the parameters for dynamic gas type.
  message DynamicGasParams {
    option (gogoproto.equal) = true;

    uint64 fixed_gas    = 1 [(gogoproto.customname) = "FixedGas"];
    uint64 gas_per_item = 2 [(gogoproto.customname) = "GasPerItem"];
  }
}
